diff --git a/Makefile b/Makefile
index 1f27c4bd0..7189a0072 100644
--- a/Makefile
+++ b/Makefile
@@ -1100,7 +1100,7 @@ export MODORDER := $(extmod_prefix)modules.order
 export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/
+core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ twodcopy/
 core-$(CONFIG_BLOCK)	+= block/
 core-$(CONFIG_IO_URING)	+= io_uring/
 
diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index c84d12608..27022f835 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -372,6 +372,7 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
+451	common  kernel_2d_copy		sys_twodcopy
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
diff --git a/twodcopy/Makefile b/twodcopy/Makefile
new file mode 100644
index 000000000..e67431c8c
--- /dev/null
+++ b/twodcopy/Makefile
@@ -0,0 +1 @@
+obj-y := twodcopy.o
diff --git a/twodcopy/twodcopy.c b/twodcopy/twodcopy.c
new file mode 100644
index 000000000..07409a5b4
--- /dev/null
+++ b/twodcopy/twodcopy.c
@@ -0,0 +1,25 @@
+#include <linux/kernel.h>
+#include <linux/syscalls.h>
+
+/*
+ * Definition for onedcopy system call
+ */
+SYSCALL_DEFINE4(twodcopy, float *, src, float *, dest, int, m, int, n)
+{
+    /* Allocate a buffer of size len to hold the elements of array */
+    float buffer[15];
+
+    /* Copy from user copies the data from src to buffer of size len */
+    if (__copy_from_user(buffer, src, sizeof(float) * (m) * (n)))
+        return -EFAULT;
+    else
+        printk(KERN_INFO "Invoked __copy_from_user successfully");
+
+    /* Copy to user copies the data from buffer to dest of size len */
+    if (__copy_to_user(dest, buffer, sizeof(float) * (m) * (n)))
+        return -EFAULT;
+    else
+        printk(KERN_INFO "Invoked __copt_to_user successfully");
+
+    return 0;
+}
